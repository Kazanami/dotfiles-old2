name: "Unit Test"

on:
  push:
   paths:
    - '.github/workflows/unit-test.yml'
    - 'bin/**'
   branches: [ 'developer' ]
  repository_dispatch:
    types: ['run-all-test']

jobs:
  unit-test:
    runs-on: ubuntu-latest

    strategy:
     fail-fast: false
     matrix:
      script: ["./nvim.sh", "./fish.sh", "./nodebrew.sh"]

    steps:
     - uses: actions/checkout@v2
     - name: unit-test of ${{matrix.script}}
       working-directory: ./bin/scripts
       run: bash -x ${{matrix.script}}

  #trigger-send:
  # runs-on: ubuntu-latest
  # needs: "unit-test"
  # steps:
  #   - name: Send trigger init test
  #     uses: peter-evans/repository-dispatch@v1
  #     with:
  #       token: ${{ secrets.REPO_TOKEN }}
  #       repository: Kazanami/dotfiles
  #       event-type: init-test
  #       client-payload: '{"ref": "${{ github.ref }}" , "sha": "${{ github.sha }}"}'
       #run: |
       #   curl -X POST -H "Authorization: token ${{secrets.REPO_TOKEN}}" \
       #      -H "Content-Type: application/json" \
       #      https://api.github.com/repos/Kazanami/dotfiles/dispatches \
       #      --data '{"event_type":"run_init_test","client_payload":{"test":true}}'
  ubuntu-vanilla:
   runs-on: ubuntu-latest
   needs: "unit-test"
   steps:
     - name: init-test of Ubuntu Vanilla
       run: |
         curl -o - "https://raw.githubusercontent.com/Kazanami/dotfiles/master/bin/install.sh" | bash
  containers:
    runs-on: ubuntu-latest
    needs: "unit-test"
    strategy:
      fail-fast: false
      matrix:
        cont_oses: ["ubuntu:latest"]
    container: ${{ matrix.cont_oses }}
    steps:
      - name: init-test of Container (${{ matrix.cont_oses }})
        run: |
          test `type apt` && apt update && apt install -y wget sudo software-properties-common || yum update; yum install wget sudo
          wget -O - "https://raw.githubusercontent.com/Kazanami/dotfiles/master/bin/install.sh" | bash -x
